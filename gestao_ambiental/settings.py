"""Django settings for gestao-ambiental project. Generated by 'django-admin
startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from os import path
from pathlib import Path

import environ
from django.contrib.messages import constants as messages
from django.core.management.utils import get_random_secret_key

env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Take environment variables from .env file
environ.Env.read_env(BASE_DIR / ".env")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str("SECRET_KEY", default=get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default=False)

ALLOWED_HOSTS = ["localhost", "127.0.0.1", ".fly.dev"]
CSRF_TRUSTED_ORIGINS = ["https://django-gestao-ambiental.fly.dev"]
# CSRF_COOKIE_SECURE = True
# SESSION_COOKIE_SECURE = True


# Application definition
INSTALLED_APPS = [
    "whitenoise.runserver_nostatic",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_filters",
    "django_plotly_dash.apps.DjangoPlotlyDashConfig",
    "apps.cluster.apps.ClusterConfig",
    "apps.tipo_residuos.apps.TipoResiduosConfig",
    "apps.destinacao.apps.DestinacaoConfig",
    "apps.entrada.apps.EntradaConfig",
    "apps.saida.apps.SaidaConfig",
    "apps.fornecedor.apps.FornecedorConfig",
    "apps.home.apps.HomeConfig",
    "apps.agua.apps.AguaConfig",
    "apps.combustivel.apps.CombustivelConfig",
    "apps.eletricidade.apps.EletricidadeConfig",
    "apps.tipo_combustivel.apps.TipoCombustivelConfig",
    "apps.unidade_consumo.apps.UnidadeConsumoConfig",
    "apps.ac_extintores.apps.ACExtintoresConfig",
    "apps.gas_sf6_nf3.apps.GasSF6NF3Config",
    "apps.cidades.apps.CidadesConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_plotly_dash.middleware.BaseMiddleware",
]

ROOT_URLCONF = "gestao_ambiental.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "libraries": {
                "is_checkbox": "templatetags.is_checkbox",
                "page_parser": "templatetags.page_parser",
                "load_menu": "templatetags.load_menu",
                "split": "templatetags.split",
            },
        },
    },
]

WSGI_APPLICATION = "gestao_ambiental.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
# DATABASES = {
#     # read os.environ['DATABASE_URL']
#     'default': env.db()  # <-- Updated!
# }
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": ("django.contrib.auth.password_validation.MinimumLengthValidator"),
    },
    {
        "NAME": ("django.contrib.auth.password_validation.CommonPasswordValidator"),
    },
    {
        "NAME": ("django.contrib.auth.password_validation.NumericPasswordValidator"),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
LANGUAGE_CODE = "pt-br"
TIME_ZONE = "America/Sao_Paulo"
USE_I18N = False
USE_TZ = True
DATE_INPUT_FORMATS = ("%d/%m/%Y", "%Y-%m-%d")


# STATICFILES CONFIGURATION ROUTING
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_URL = "static/"
STATICFILES_DIRS = [path.join(BASE_DIR, "gestao_ambiental/static")]
STATIC_ROOT = path.join(BASE_DIR, "staticfiles")

# https://docs.djangoproject.com/en/4.2/ref/settings/#std-setting-STORAGES
STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# MESSAGES CSS TAGS
MESSAGE_TAGS = {
    messages.DEBUG: "bg-info text-white",
    messages.INFO: "bg-info text-white",
    messages.SUCCESS: "bg-success text-white",
    messages.WARNING: "bg-warning text-white",
    messages.ERROR: "bg-danger text-white",
}


#######################
### CUSTOM SETTINGS ###
#######################
PAGESIZE = 15

# to allow plotly dash to serve assets
# https://django-plotly-dash.readthedocs.io/en/latest/installation.html
X_FRAME_OPTIONS = "SAMEORIGIN"
